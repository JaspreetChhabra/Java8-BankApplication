Pravins-MBP 98-01-A7-95-2B-BD



enum A {
%E
;
    int x;
    class B { // inner class 
        int d = calculateDistance(p1,p2);
        assert d >= 0 : "distance check failed"; 
    }
    static class C {
        int m1() throws E1 {
            .
            
            if (errorDetected) {
                throw new E1();
            }
            return 0;
        } 
    }
    
    
    @inerface MyAnnotation {
       
    }
}


A.C ac1 = new A.C();

A a = new A();

A.B ab1 = a.new B();
A.B ab2 = a.new B();

keyword 50 + 1
-------------
_ future use from java 9
const
goto

byte, short, int, long, foat, double, char, boolean, void   (9)
class, interface, enum, extends, implements (5)
public protected private (3)
abstract, final, static, native, strictfp, synchronized, transient, volaile, default (9)
package, import, throws, try, catch, finally (6)
if, else, switch, for, case, while, do,assert, throw, return, break, continue, assert (12)
new, instanceof, this, super (4)

Literals
    true, false, null




Vehicle v = new Car(); // new Bike();

    if (v instanceof Car) {
        
    }

void m1(Vehicle v) {
    
}


public class SomeClass {
    int x;
    int y;
    int m1(int x) {
        x
        this.x
        (this instanceof SubClass)
    }
    
    static int m2(int y) {
    
    }
    public static void main(String[] args) {
        SomeClass.m2(4);
     //   SomeClass.m1(5);
        SomeClass sc1 = new SubClass();
        sc1.m1();
    }
}

public class SubClass extends SomeClass {
    int m1(int x) {
        ...
    }
    void someMethod() {
        this.m1(5);
        super.m1(5)
    }    
}










